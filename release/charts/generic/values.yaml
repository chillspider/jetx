# Default values for generic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1


image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

services: []
env: {}
secretEnv: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  defaultBackend: true
  redirect_https: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - host: chart-example.local
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  tls:
    # if `autoSecret` or `secretName` is true, this will specify the service to not use the default certificate and instead create its own
    autoSecret: false
    secretName: null
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
internalIngress:
  enabled: false
  defaultBackend: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #  - host: chart-example.local
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  tls:
    autoSecret: false
    secretName: null
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


extraEnv: {}
datacenter: "default-dc"
tenant: undefined

fileMounts: null
# fileMounts:
#   local-properities:
#     path: local.properties
#     mountPath: /config/
#     value: test

secretMounts: null
# secretMounts:
#   local-secret:
#     path: local.secret
#     mountPath: /config/
#     value: test
#     isBase64Encoded: false

cronJobs: {}
  # backup:
  #   schedule: "0 * * * *"
  #   image: busybox
  #   tag: latest
  #   command: ["echo", "hello", "world"]
  #   resources:
  #     limits:
  #       cpu: 200m
  #       memory: 200M
  #     requests:
  #       cpu: 40m
  #       memory: 40M

deployment:
  disabled: false

migrate:
  # Both `.Values.migrate.supported` and `.Values.migrate.enabled` have to be "true" in order to run DB migrations

  # Supported indicates that the container image has `dbmate` (or some other db migration tool) bundled in
  supported: false
  # Enabled indicates that the person initiating the workflow wants migration to be executed
  enabled: false

migrateCheck:
  # Both `.Values.migrate.supported` and `.Values.migrate.enabled` have to be "true" in order to run DB migrations

  # Supported indicates that the container image has `dbmate` (or some other db migration tool) bundled in
  supported: false
  command:
    - /opt/dbmate
  args:
    - status
    - --exit-code

pdb:
  enabled: false
